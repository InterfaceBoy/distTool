{"remainingRequest":"/Users/heyuanpeng/个人项目/distTool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/distTool/src/views/svg-viewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/distTool/src/views/svg-viewer.vue","mtime":1596164601324},{"path":"/Users/heyuanpeng/个人项目/distTool/node_modules/cache-loader/dist/cjs.js","mtime":1592459011967},{"path":"/Users/heyuanpeng/个人项目/distTool/node_modules/babel-loader/lib/index.js","mtime":1587105805867},{"path":"/Users/heyuanpeng/个人项目/distTool/node_modules/cache-loader/dist/cjs.js","mtime":1592459011967},{"path":"/Users/heyuanpeng/个人项目/distTool/node_modules/vue-loader/lib/index.js","mtime":1592459027834}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCi8vIOiOt+WPluaJgOaciXN2Z+eahOWQjeensApjb25zdCBpY29ucyA9IHJlcXVpcmUKICAuY29udGV4dCgiLi4vc3ZnIiwgZmFsc2UsIC9cLnN2ZyQvKQogIC5rZXlzKCkKICAubWFwKG5hbWUgPT4gbmFtZS5yZXBsYWNlKC9eXC5cLyhbXHctXSspXC5zdmcvLCAiJDEiKSk7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInN2Zy12aWV3ZXIiLAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGhhbmRsZUljb25DbGljayhpY29uTmFtZSkgewogICAgICBhd2FpdCBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChgPFN2Z0ljb24gbmFtZT0nJHtpY29uTmFtZX0nIC8+YCk7CiAgICAgIGFsZXJ0KGAke2ljb25OYW1lfeWbvuagh+S7o+eggeW3suWkjeWItuWIsOWJquWIh+adv2ApOwogICAgfQogIH0sCiAgcmVuZGVyKCkgewogICAgY29uc3QgeyBTdmdJY29uIH0gPSB0aGlzLiRvcHRpb25zLmNvbXBvbmVudHM7CiAgICByZXR1cm4gKAogICAgICA8ZGl2IGNsYXNzPSJpY29uLXZpZXciPgogICAgICAgIDxwPueCueS4gOeCueWbvuagh+WwseiDveWPluS7o+eggTwvcD4KICAgICAgICB7aWNvbnMubWFwKGljb25OYW1lID0+ICgKICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24iIG9uLWNsaWNrPXsoKSA9PiB0aGlzLmhhbmRsZUljb25DbGljayhpY29uTmFtZSl9PgogICAgICAgICAgICA8U3ZnSWNvbiBuYW1lPXtpY29uTmFtZX0gLz4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tbmFtZSI+e2ljb25OYW1lfTwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICkpfQogICAgICA8L2Rpdj4KICAgICk7CiAgfQp9Owo="},{"version":3,"sources":["svg-viewer.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"svg-viewer.vue","sourceRoot":"src/views","sourcesContent":["<!--\n * @Description: svg图标预览组件，建议新增路由页面加载\n-->\n\n<script>\n// 获取所有svg的名称\nconst icons = require\n  .context(\"../svg\", false, /\\.svg$/)\n  .keys()\n  .map(name => name.replace(/^\\.\\/([\\w-]+)\\.svg/, \"$1\"));\n\nexport default {\n  name: \"svg-viewer\",\n  methods: {\n    async handleIconClick(iconName) {\n      await navigator.clipboard.writeText(`<SvgIcon name='${iconName}' />`);\n      alert(`${iconName}图标代码已复制到剪切板`);\n    }\n  },\n  render() {\n    const { SvgIcon } = this.$options.components;\n    return (\n      <div class=\"icon-view\">\n        <p>点一点图标就能取代码</p>\n        {icons.map(iconName => (\n          <div class=\"icon\" on-click={() => this.handleIconClick(iconName)}>\n            <SvgIcon name={iconName} />\n            <span class=\"icon-name\">{iconName}</span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n};\n</script>\n<style scoped>\n.icon-view {\n  width: 100%;\n  height: 100%;\n  font-size: 32px;\n}\n\n.icon-view p {\n  text-align: center;\n  margin: 10px;\n}\n\n.icon-view .icon {\n  display: inline-block;\n  text-align: center;\n  margin: 9px 8px;\n  width: 100px;\n  height: 80px;\n  border-radius: 8%;\n  cursor: pointer;\n}\n\n.icon-view .icon i {\n  transition: transform 0.2s;\n}\n\n.icon-view .icon i:hover {\n  transform: scale(1.5);\n}\n\n.icon-view .icon .icon-name {\n  font-size: 12px;\n  margin-top: 5px;\n  display: block;\n}\n</style>\n"]}]}