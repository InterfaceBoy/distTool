{"remainingRequest":"/Users/heyuanpeng/个人项目/distTool/node_modules/babel-loader/lib/index.js!/Users/heyuanpeng/个人项目/distTool/node_modules/eslint-loader/index.js??ref--13-0!/Users/heyuanpeng/个人项目/distTool/src/api/index.js","dependencies":[{"path":"/Users/heyuanpeng/个人项目/distTool/src/api/index.js","mtime":1596164601319},{"path":"/Users/heyuanpeng/个人项目/distTool/node_modules/cache-loader/dist/cjs.js","mtime":1592459011967},{"path":"/Users/heyuanpeng/个人项目/distTool/node_modules/babel-loader/lib/index.js","mtime":1587105805867},{"path":"/Users/heyuanpeng/个人项目/distTool/node_modules/eslint-loader/index.js","mtime":1567574714613}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2hleXVhbnBlbmcvXHU0RTJBXHU0RUJBXHU5ODc5XHU3NkVFL2Rpc3RUb29sL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvciI7CgpmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7IHRyeSB7IHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsgfSBjYXRjaCAoZXJyb3IpIHsgcmVqZWN0KGVycm9yKTsgcmV0dXJuOyB9IGlmIChpbmZvLmRvbmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0gZWxzZSB7IFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsgfSB9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgc2VsZiA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsgZnVuY3Rpb24gX25leHQodmFsdWUpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsgfSBmdW5jdGlvbiBfdGhyb3coZXJyKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsgfSBfbmV4dCh1bmRlZmluZWQpOyB9KTsgfTsgfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCBIanNvbiBmcm9tICJoanNvbiI7CmltcG9ydCBIdHRwUmVxdWVzdCBmcm9tICJAL3V0aWxzL2h0dHAiOwppbXBvcnQgeyBpc0lFIH0gZnJvbSAiQC91dGlscy9iYXNlIjsKdmFyIGluc3RhbmNlTWFwID0gewogIC8vIOWfuuehgOacjeWKoQogIGJhc2U6IG51bGwKfTsgLy8g5rOo5YaM5a6e5L6LCgpleHBvcnQgdmFyIGluaXRBeGlvc0luc3RhbmNlID0gZnVuY3Rpb24gaW5pdEF4aW9zSW5zdGFuY2UoY29uZmlnKSB7CiAgdmFyIEFQSSA9IGNvbmZpZy5BUEksCiAgICAgIEFQSV9GSUxFX0RJUiA9IGNvbmZpZy5BUElfRklMRV9ESVI7CiAgdmFyIEJBU0VVUkwgPSBBUEkgKyBBUElfRklMRV9ESVIgfHwgIiI7CiAgaW5zdGFuY2VNYXAuYmFzZSA9IG5ldyBIdHRwUmVxdWVzdCh7CiAgICBCQVNFVVJMOiBCQVNFVVJMCiAgfSk7Cn07Ci8qKgogKiBnZXTmlrnms5UKICogQHBhcmFtIHtTdHJpbmd9IHVybCBb6K+35rGC55qEdXJs5Zyw5Z2AXQogKiBAcGFyYW0ge1N0cmluZ30gc2VydmljZU5hbWUgW+ivt+axguacjeWKoeWQjeWSjOacjeWKoeaPj+i/sCjlkoxzd2FnZ2Vy5a+55bqUKV0KICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgW+ivt+axguaXtuaQuuW4pueahOWPguaVsF0gKOWPr+mAiSkKICovCgp2YXIgZ2V0ID0gZnVuY3Rpb24gZ2V0KGF4aW9zSW5zdGFuY2UsIHVybCkgewogIHZhciBzZXJ2aWNlTmFtZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogIuacquefpeacjeWKoSI7CiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9OwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBheGlvc0luc3RhbmNlKF9vYmplY3RTcHJlYWQoewogICAgICB1cmw6IHVybCwKICAgICAgbWV0aG9kOiAiZ2V0IiwKICAgICAgLy8gZml4IGllIGdldCDnvJPlrZjpl67popgKICAgICAgaGVhZGVyczogaXNJRSA/IHsKICAgICAgICAiQ2FjaGUtQ29udHJvbCI6ICJuby1jYWNoZSIKICAgICAgfSA6IHt9CiAgICB9LCBvcHRpb25zKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIGNvbnNvbGUuZXJyb3IoImdldFx1OEJGN1x1NkM0Mi0tLSIuY29uY2F0KHNlcnZpY2VOYW1lLCAiLS0tXHU2M0E1XHU1M0UzXHU1OTMxXHU4RDI1IikpOwogICAgfSk7CiAgfSk7Cn07Ci8qKgogKiBwb3N05pa55rOVCiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgW+ivt+axgueahHVybOWcsOWdgF0KICogQHBhcmFtIHtTdHJpbmd9IHNlcnZpY2VOYW1lIFvor7fmsYLmnI3liqHlkI3lkozmnI3liqHmj4/ov7Ao5ZKMc3dhZ2dlcuWvueW6lCldCiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgW+ivt+axguaXtuaQuuW4pueahOWPguaVsF0gKOWPr+mAiSkKICovCgoKdmFyIHBvc3QgPSBmdW5jdGlvbiBwb3N0KGF4aW9zSW5zdGFuY2UsIHVybCkgewogIHZhciBzZXJ2aWNlTmFtZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogIuacquefpeacjeWKoSI7CiAgdmFyIHBhcmFtcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDoge307CiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IHt9OwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBheGlvc0luc3RhbmNlKF9vYmplY3RTcHJlYWQoewogICAgICB1cmw6IHVybCwKICAgICAgbWV0aG9kOiAicG9zdCIsCiAgICAgIGRhdGE6IHBhcmFtcwogICAgfSwgb3B0aW9ucykpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICByZXNvbHZlKHJlcy5kYXRhKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICByZWplY3QoZXJyb3IpOwogICAgICBjb25zb2xlLmVycm9yKCJwb3N0XHU4QkY3XHU2QzQyLS0tIi5jb25jYXQoc2VydmljZU5hbWUsICItLS1cdTYzQTVcdTUzRTNcdTU5MzFcdThEMjUiKSk7CiAgICB9KTsKICB9KTsKfTsKLyoqCiAqIHB1dOaWueazlQogKiBAcGFyYW0ge1N0cmluZ30gdXJsIFvor7fmsYLnmoR1cmzlnLDlnYBdCiAqIEBwYXJhbSB7U3RyaW5nfSBzZXJ2aWNlTmFtZSBb6K+35rGC5pyN5Yqh5ZCN5ZKM5pyN5Yqh5o+P6L+wKOWSjHN3YWdnZXLlr7nlupQpXQogKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIFvor7fmsYLml7bmkLrluKbnmoTlj4LmlbBdICjlj6/pgIkpCiAqLwoKCnZhciBwdXQgPSBmdW5jdGlvbiBwdXQoYXhpb3NJbnN0YW5jZSwgdXJsKSB7CiAgdmFyIHNlcnZpY2VOYW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAi5pyq55+l5pyN5YqhIjsKICB2YXIgcGFyYW1zID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB7fTsKICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDoge307CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGF4aW9zSW5zdGFuY2UoX29iamVjdFNwcmVhZCh7CiAgICAgIHVybDogdXJsLAogICAgICBtZXRob2Q6ICJwdXQiLAogICAgICBkYXRhOiBwYXJhbXMKICAgIH0sIG9wdGlvbnMpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmVzb2x2ZShyZXMuZGF0YSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgY29uc29sZS5lcnJvcigicHV0XHU4QkY3XHU2QzQyLS0tIi5jb25jYXQoc2VydmljZU5hbWUsICItLS1cdTYzQTVcdTUzRTNcdTU5MzFcdThEMjUiKSk7CiAgICB9KTsKICB9KTsKfTsKLyoqCiAqIGRlbGV0ZeaWueazlQogKiBAcGFyYW0ge1N0cmluZ30gdXJsIFvor7fmsYLnmoR1cmzlnLDlnYBdCiAqIEBwYXJhbSB7U3RyaW5nfSBzZXJ2aWNlTmFtZSBb6K+35rGC5pyN5Yqh5ZCN5ZKM5pyN5Yqh5o+P6L+wKOWSjHN3YWdnZXLlr7nlupQpXQogKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIFvor7fmsYLml7bmkLrluKbnmoTlj4LmlbBdICjlj6/pgIkpCiAqLwoKCnZhciBEZWxldGUgPSBmdW5jdGlvbiBEZWxldGUoYXhpb3NJbnN0YW5jZSwgdXJsKSB7CiAgdmFyIHNlcnZpY2VOYW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAi5pyq55+l5pyN5YqhIjsKICB2YXIgcGFyYW1zID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB7fTsKICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDoge307CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGF4aW9zSW5zdGFuY2UoX29iamVjdFNwcmVhZCh7CiAgICAgIHVybDogdXJsLAogICAgICBtZXRob2Q6ICJkZWxldGUiLAogICAgICBkYXRhOiBwYXJhbXMKICAgIH0sIG9wdGlvbnMpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmVzb2x2ZShyZXMuZGF0YSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgY29uc29sZS5lcnJvcigiXHU4QkY3XHU2QzQyLS0tIi5jb25jYXQoc2VydmljZU5hbWUsICItLS1cdTYzQTVcdTUzRTNcdTU5MzFcdThEMjUiKSk7CiAgICB9KTsKICB9KTsKfTsKCmV4cG9ydCB2YXIgSkdFVCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHVybCwgc2VydmljZU5hbWUpIHsKICAgIHZhciByZXMsIGRhdGE7CiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBIdHRwUmVxdWVzdC5nZXQodXJsLCB7CiAgICAgICAgICAgICAgLy8g6Zi75q2iIGF4aW9zIOiHquWKqCBKU09OLnBhcnNlCiAgICAgICAgICAgICAgLy8gcmVmZXIgaHR0cHM6Ly9naXRodWIuY29tL2F4aW9zL2F4aW9zL2lzc3Vlcy85MDcKICAgICAgICAgICAgICB0cmFuc2Zvcm1SZXNwb25zZTogdW5kZWZpbmVkLAogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICJDYWNoZS1Db250cm9sIjogIm5vLWNhY2hlLCBuby1zdG9yZSwgbXVzdC1yZXZhbGlkYXRlIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIEhqc29uLnBhcnNlKGRhdGEpKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJcdThCRjdcdTZDNDItLS0iLmNvbmNhdChzZXJ2aWNlTmFtZSwgIi0tLVx1NTkzMVx1OEQyNSIpKTsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgOF1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBKR0VUKF94LCBfeDIpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIEdFVCA9IGZ1bmN0aW9uIEdFVCh1cmwsIHNlcnZpY2VOYW1lLCBwYXJhbXMsIG9wdGlvbnMpIHsKICByZXR1cm4gZ2V0KGluc3RhbmNlTWFwLmJhc2UsIHVybCwgc2VydmljZU5hbWUsIHBhcmFtcywgb3B0aW9ucyk7Cn07CmV4cG9ydCB2YXIgUE9TVCA9IGZ1bmN0aW9uIFBPU1QodXJsLCBzZXJ2aWNlTmFtZSwgcGFyYW1zLCBvcHRpb25zKSB7CiAgcmV0dXJuIHBvc3QoaW5zdGFuY2VNYXAuYmFzZSwgdXJsLCBzZXJ2aWNlTmFtZSwgcGFyYW1zLCBvcHRpb25zKTsKfTsKZXhwb3J0IHZhciBQVVQgPSBmdW5jdGlvbiBQVVQodXJsLCBzZXJ2aWNlTmFtZSwgcGFyYW1zLCBvcHRpb25zKSB7CiAgcmV0dXJuIHB1dChpbnN0YW5jZU1hcC5iYXNlLCB1cmwsIHNlcnZpY2VOYW1lLCBwYXJhbXMsIG9wdGlvbnMpOwp9OwpleHBvcnQgdmFyIERFTEVURSA9IGZ1bmN0aW9uIERFTEVURSh1cmwsIHNlcnZpY2VOYW1lLCBwYXJhbXMsIG9wdGlvbnMpIHsKICByZXR1cm4gRGVsZXRlKGluc3RhbmNlTWFwLmJhc2UsIHVybCwgc2VydmljZU5hbWUsIHBhcmFtcywgb3B0aW9ucyk7Cn07"},{"version":3,"sources":["/Users/heyuanpeng/个人项目/distTool/src/api/index.js"],"names":["Hjson","HttpRequest","isIE","instanceMap","base","initAxiosInstance","config","API","API_FILE_DIR","BASEURL","get","axiosInstance","url","serviceName","options","Promise","resolve","reject","method","headers","then","res","data","catch","error","console","post","params","put","Delete","JGET","transformResponse","undefined","parse","Error","GET","POST","PUT","DELETE"],"mappings":"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","sourcesContent":["import Hjson from \"hjson\";\n\nimport HttpRequest from \"@/utils/http\";\nimport { isIE } from \"@/utils/base\";\n\nconst instanceMap = {\n  // 基础服务\n  base: null\n};\n\n// 注册实例\nexport const initAxiosInstance = config => {\n  const { API, API_FILE_DIR } = config;\n  const BASEURL = API + API_FILE_DIR || \"\";\n  instanceMap.base = new HttpRequest({\n    BASEURL\n  });\n};\n\n/**\n * get方法\n * @param {String} url [请求的url地址]\n * @param {String} serviceName [请求服务名和服务描述(和swagger对应)]\n * @param {Object} options [请求时携带的参数] (可选)\n */\nconst get = (axiosInstance, url, serviceName = \"未知服务\", options = {}) =>\n  new Promise((resolve, reject) => {\n    axiosInstance({\n      url,\n      method: \"get\",\n      // fix ie get 缓存问题\n      headers: isIE\n        ? {\n            \"Cache-Control\": \"no-cache\"\n          }\n        : {},\n      ...options\n    })\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(error => {\n        reject(error);\n        console.error(`get请求---${serviceName}---接口失败`);\n      });\n  });\n\n/**\n * post方法\n * @param {String} url [请求的url地址]\n * @param {String} serviceName [请求服务名和服务描述(和swagger对应)]\n * @param {Object} params [请求时携带的参数] (可选)\n */\nconst post = (\n  axiosInstance,\n  url,\n  serviceName = \"未知服务\",\n  params = {},\n  options = {}\n) =>\n  new Promise((resolve, reject) => {\n    axiosInstance({\n      url,\n      method: \"post\",\n      data: params,\n      ...options\n    })\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(error => {\n        reject(error);\n        console.error(`post请求---${serviceName}---接口失败`);\n      });\n  });\n\n/**\n * put方法\n * @param {String} url [请求的url地址]\n * @param {String} serviceName [请求服务名和服务描述(和swagger对应)]\n * @param {Object} params [请求时携带的参数] (可选)\n */\nconst put = (\n  axiosInstance,\n  url,\n  serviceName = \"未知服务\",\n  params = {},\n  options = {}\n) =>\n  new Promise((resolve, reject) => {\n    axiosInstance({\n      url,\n      method: \"put\",\n      data: params,\n      ...options\n    })\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(error => {\n        reject(error);\n        console.error(`put请求---${serviceName}---接口失败`);\n      });\n  });\n\n/**\n * delete方法\n * @param {String} url [请求的url地址]\n * @param {String} serviceName [请求服务名和服务描述(和swagger对应)]\n * @param {Object} params [请求时携带的参数] (可选)\n */\nconst Delete = (\n  axiosInstance,\n  url,\n  serviceName = \"未知服务\",\n  params = {},\n  options = {}\n) =>\n  new Promise((resolve, reject) => {\n    axiosInstance({\n      url,\n      method: \"delete\",\n      data: params,\n      ...options\n    })\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(error => {\n        reject(error);\n        console.error(`请求---${serviceName}---接口失败`);\n      });\n  });\n\nexport const JGET = async (url, serviceName) => {\n  try {\n    const res = await HttpRequest.get(url, {\n      // 阻止 axios 自动 JSON.parse\n      // refer https://github.com/axios/axios/issues/907\n      transformResponse: undefined,\n      headers: {\n        \"Cache-Control\": \"no-cache, no-store, must-revalidate\"\n      }\n    });\n    const { data } = res;\n    return Hjson.parse(data);\n  } catch (error) {\n    console.error(error);\n    throw new Error(`请求---${serviceName}---失败`);\n  }\n};\n\nexport const GET = (url, serviceName, params, options) => {\n  return get(instanceMap.base, url, serviceName, params, options);\n};\n\nexport const POST = (url, serviceName, params, options) =>\n  post(instanceMap.base, url, serviceName, params, options);\n\nexport const PUT = (url, serviceName, params, options) =>\n  put(instanceMap.base, url, serviceName, params, options);\n\nexport const DELETE = (url, serviceName, params, options) =>\n  Delete(instanceMap.base, url, serviceName, params, options);\n"]}]}